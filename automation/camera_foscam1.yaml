
- alias: '[Camera Foscam1] Take snapshot'
  hide_entity: true
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.foscam1_snapshot
    to: 'on'
  action:
  - service: camera.snapshot
    data_template:
      entity_id: camera.foscam_1
      #filename: '/mnt/ssd/homeassistant/snapshots/Foscam1_{{ now().strftime("%Y%m%d-%H%M%S") }}_m.jpg'
      filename: '/home/homeassistant/.homeassistant/www/camera_snapshots/Foscam1_{{ now().strftime("%Y%m%d-%H%M%S") }}_m.jpg'
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.foscam1_snapshot


- alias: '[Camera Foscam1] Restart power if unavailable'
  hide_entity: true
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.foscam1
    to: 'off'
    for:
      minutes: 5
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.cameras
  - delay:
      seconds: 5
  - service: switch.turn_on
    data:
      entity_id: switch.cameras
#  - service: notify.pushover
#    data:
#      message: "Foscam1 is unavailable. Restart power."


- alias: '[Camera Foscam1] Play stream on TV'
  hide_entity: true
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.foscam1_on_tv
    to: 'on'
  action:
  - service: camera.play_stream
    data:
      entity_id: camera.foscam_1
      media_player: media_player.sirius


- alias: '[Camera Foscam1] Stop stream on TV'
  hide_entity: true
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.foscam1_on_tv
    to: 'off'
  action:
  - service: media_player.turn_off
    data:
      entity_id: media_player.sirius


- alias: '[Camera Foscam1] Record video'
  hide_entity: true
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.foscam1_record_video
    to: 'on'
  action:
  - service: camera.record
    data_template:
      entity_id: camera.foscam_1
      filename: '/home/homeassistant/.homeassistant/www/camera_records/Foscam1_{{ now().strftime("%Y%m%d-%H%M%S") }}_m.mp4'
      duration: "{{ states('input_number.foscam1_record_length') | int }}"
  - service: shell_command.update_records_index
  - delay:
      seconds: "{{ states('input_number.foscam1_record_length') | int }}"
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.foscam1_record_video

