

- alias: '[Guestroom Blinds] Close 15 min after sunset if cloudy'
  trigger:
  - platform: sun
    event: sunset
    offset: '00:15:00'
  condition:
  - condition: state
    entity_id: input_boolean.guestroom_blinds_auto
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.yr_cloudiness
    above: 35
  action:
  - service: python_script.blinds_moving_control
    data:
      entity_id: cover.blinds_guestroom
      is_moving: 'on'
  - service: cover.set_cover_position
    data:
      entity_id: cover.blinds_guestroom
      position: 0


- alias: '[Guestroom Blinds] Close 30 min after sunset if still open'
  trigger:
  - platform: sun
    event: sunset
    offset: '00:30:00'
  condition:
  - condition: state
    entity_id: input_boolean.guestroom_blinds_auto
    state: 'on'
  action:
  - service: python_script.blinds_moving_control
    data:
      entity_id: cover.blinds_guestroom
      is_moving: 'on'
  - service: cover.set_cover_position
    data:
      entity_id: cover.blinds_guestroom
      position: 0

# ----------------------------------------------------------

- alias: '[Guestroom Blinds] Open 30 min before sunrise if awake and not cloudy'
  trigger:
  - platform: sun
    event: sunrise
    offset: '-00:30:00'
  condition:
  - condition: state
    entity_id: input_boolean.guestroom_blinds_auto
    state: 'on'
  - condition: state
    entity_id: binary_sensor.all_in_bed
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.yr_cloudiness
    below: 35
  action:
  - service: python_script.blinds_moving_control
    data:
      entity_id: cover.blinds_guestroom
      is_moving: 'on'
  - service: cover.set_cover_position
    data:
      entity_id: cover.blinds_guestroom
      position: 100


- alias: '[Guestroom Blinds] Open 15 min before sunrise if awake and still close'
  trigger:
  - platform: sun
    event: sunrise
    offset: '-00:15:00'
  condition:
  - condition: state
    entity_id: input_boolean.guestroom_blinds_auto
    state: 'on'
  - condition: state
    entity_id: binary_sensor.all_in_bed
    state: 'off'
  action:
  - service: python_script.blinds_moving_control
    data:
      entity_id: cover.blinds_guestroom
      is_moving: 'on'
  - service: cover.set_cover_position
    data:
      entity_id: cover.blinds_guestroom
      position: 100

# ----------------------------------------------------------

- alias: '[Guestroom Blinds] Open when wake up 30 min before sunset and not cloudy'
  trigger:
  - platform: state
    entity_id: binary_sensor.all_in_bed
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.guestroom_blinds_auto
    state: 'on'
  - condition: sun
    after: sunrise
    after_offset: '-00:30:00'
  - condition: sun
    before: sunset
    before_offset: '00:30:00'
  - condition: numeric_state
    entity_id: sensor.yr_cloudiness
    below: 35
  action:
  - delay: '00:00:05'
  - service: python_script.blinds_moving_control
    data:
      entity_id: cover.blinds_guestroom
      is_moving: 'on'
  - service: cover.set_cover_position
    data:
      entity_id: cover.blinds_guestroom
      position: 100


- alias: '[Guestroom Blinds] Open when wake up 15 min before sunset and still close'
  trigger:
  - platform: state
    entity_id: binary_sensor.all_in_bed
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.guestroom_blinds_auto
    state: 'on'
  - condition: sun
    after: sunrise
    after_offset: '-00:15:00'
  - condition: sun
    before: sunset
    before_offset: '00:15:00'
  - condition: or
    conditions:
    - condition: state
      entity_id: sensor.yr_cloudiness
      state: 'unknown'
    - condition: state
      entity_id: sensor.yr_cloudiness
      state: 'unavailable'
    - condition: numeric_state
      entity_id: sensor.yr_cloudiness
      above: 35
  action:
  - delay: '00:00:05'
  - service: python_script.blinds_moving_control
    data:
      entity_id: cover.blinds_guestroom
      is_moving: 'on'
  - service: cover.set_cover_position
    data:
      entity_id: cover.blinds_guestroom
      position: 100



