
- alias: '[Guestroom Blinds] Close at sunset'
  trigger:
  - platform: sun
    event: sunset
    offset: '00:15:00'
  condition:
  - condition: state
    entity_id: input_boolean.guestroom_blinds_auto
    state: 'on'
#  - condition: state
#    entity_id: binary_sensor.blinds_guestroom_moving
#    state: 'off'
  action:
  - service: python_script.blinds_moving_control
    data:
      entity_id: cover.blinds_guestroom
      is_moving: 'on'
  - service: cover.set_cover_position
    data:
      entity_id: cover.blinds_guestroom
      position: 36


- alias: '[Guestroom Blinds] Open at sunrise if awake'
  trigger:
  - platform: sun
    event: sunrise
    offset: '-00:15:00'
  condition:
  - condition: state
    entity_id: input_boolean.guestroom_blinds_auto
    state: 'on'
  - condition: state
    entity_id: binary_sensor.all_in_bed
    state: 'off'
#  - condition: state
#    entity_id: binary_sensor.blinds_guestroom_moving
#    state: 'off'
  action:
  - service: python_script.blinds_moving_control
    data:
      entity_id: cover.blinds_guestroom
      is_moving: 'on'
  - service: cover.set_cover_position
    data:
      entity_id: cover.blinds_guestroom
      position: 100


- alias: '[Guestroom Blinds] Open when wake up after sunrise'
  trigger:
  - platform: state
    entity_id: binary_sensor.all_in_bed
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.guestroom_blinds_auto
    state: 'on'
  - condition: sun
    after: sunrise
    after_offset: '-00:15:00'
  - condition: sun
    before: sunset
    before_offset: '00:15:00'
#  - condition: state
#    entity_id: sun.sun
#    state: 'above_horizon'
#  - condition: state
#    entity_id: binary_sensor.blinds_guestroom_moving
#    state: 'off'
  action:
  - delay: '00:00:03'
  - service: python_script.blinds_moving_control
    data:
      entity_id: cover.blinds_guestroom
      is_moving: 'on'
  - service: cover.set_cover_position
    data:
      entity_id: cover.blinds_guestroom
      position: 100


